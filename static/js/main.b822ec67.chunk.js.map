{"version":3,"sources":["config/paths.js","components/icons/Icons.js","actions/index.js","components/Todo.js","components/TodoList.js","components/add_todo/AddTodo.js","App.js","registerServiceWorker.js","reducers/todos.js","reducers/index.js","store.js","index.js"],"names":["paths","root","addTodo","Icons","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","UNSAFE_componentWillMount","$","css","fadeIn","onAddTodo","bind","assertThisInitialized","onClear","elements","document","querySelectorAll","M","Tooltip","init","clearTodos","_this2","fadeOut","history","push","react_default","a","createElement","className","onClick","data-position","data-tooltip","Component","withRouter","type","Todo","onFinishTodo","name","done","connect","state","dispatch","finishTodo","todos","onClearTodos","_ref","sort","x","y","map","todo","index","components_Todo","assign","key","components_icons_Icons","AddTodo","inputValue","onGoBack","updateInputValue","onEnterPress","_this3","event","keyCode","shiftKey","preventDefault","setState","target","value","_this4","id","onChange","onKeyDown","htmlFor","App","Switch","Route","exact","path","Paths","component","components_TodoList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initState","arguments","length","undefined","action","toConsumableArray","concat","objectSpread","filter","combineReducers","createStore","reducer","devToolsExtension","ReactDOM","render","es","store","HashRouter_default","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"0SAKeA,EALD,CACZC,KAAM,IACNC,QAAS,4DCKLC,qBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMRQ,0BAA4B,WAC1BC,IAAE,QAAQC,IAAI,UAAW,QACzBD,IAAE,QAAQE,OAAO,SANjBV,EAAKW,UAAYX,EAAKW,UAAUC,KAAfX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACjBA,EAAKc,QAAUd,EAAKc,QAAQF,KAAbX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAJEA,mFAcjB,IAAMe,EAAWC,SAASC,iBAAiB,eAC3CC,IAAEC,QAAQC,KAAKL,qCAIfZ,KAAKJ,MAAMsB,iDAGD,IAAAC,EAAAnB,KACVK,IAAE,QAAQe,QAAQ,OAAQ,WACxBD,EAAKvB,MAAMyB,QAAQC,KAAK,8CAK1B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,wEACVC,QAAS3B,KAAKW,QACdiB,gBAAc,MACdC,eAAa,4BAEbN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,UAEFH,EAAAC,EAAAC,cAAA,UACEC,UAAU,uEACVC,QAAS3B,KAAKQ,UACdoB,gBAAc,MACdC,eAAa,kBAEbN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,gBA9CUI,cA0DLC,cAAWpC,WCvDbuB,EAAa,CACxBc,KAAM,eCLFC,cACJ,SAAAA,EAAYrC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACjBpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMJ,KAEDsC,aAAerC,EAAKqC,aAAazB,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAHHA,8EAOjBG,KAAKJ,MAAMsC,aAAalC,KAAKJ,MAAMuC,uCAInC,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,WAAa1B,KAAKJ,MAAMwC,KAAO,YAAc,KAC3Db,EAAAC,EAAAC,cAAA,UACGzB,KAAKJ,MAAMwC,KAAOb,EAAAC,EAAAC,cAAA,SAAIzB,KAAKJ,MAAMuC,MAAYnC,KAAKJ,MAAMuC,OAG7DZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UACEC,UACE,2CACC1B,KAAKJ,MAAMwC,KAAO,WAAa,IAElCJ,KAAK,SACLG,KAAK,SACLR,QAAS3B,KAAKkC,cAPhB,OAUEX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAb,kBA9BOI,aA0DJO,cAdS,SAAAC,GACtB,MAAO,CACLA,UAIuB,SAAAC,GACzB,MAAO,CACLL,aAAc,SAAAC,GACZI,EDtDoB,SAAAJ,GAAI,MAAK,CACjCH,KAAM,cACNG,QCoDaK,CAAWL,OAKXE,CAGbJ,GChBaI,cAfS,SAAAC,GACtB,MAAO,CACLG,MAAOH,EAAMG,MACbvB,WAAYA,IAIW,SAAAqB,GACzB,MAAO,CACLG,aAAc,WACZH,EAASrB,MAKAmB,CA1CE,SAAAM,GAA6B,IAA1BF,EAA0BE,EAA1BF,MAAOC,EAAmBC,EAAnBD,aAKzB,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZe,EACEG,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAET,OAASU,EAAEV,KAAO,EAAIS,EAAET,KAAO,GAAK,IACtDW,IAAI,SAACC,EAAMC,GAAP,OACH1B,EAAAC,EAAAC,cAACyB,EAADpD,OAAAqD,OAAA,CAAMC,IAAKH,GAAWD,MAE1BzB,EAAAC,EAAAC,cAAC4B,EAAD,CAAOnC,WAXX,WACEwB,UCHEY,qBACJ,SAAAA,EAAY1D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACjBzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KAYRQ,0BAA4B,WAC1BC,IAAE,QAAQC,IAAI,UAAW,QACzBD,IAAE,QAAQE,OAAO,SAZjBV,EAAKyC,MAAQ,CACXiB,WAAY,IAGd1D,EAAK2D,SAAW3D,EAAK2D,SAAS/C,KAAdX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAChBA,EAAKW,UAAYX,EAAKW,UAAUC,KAAfX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACjBA,EAAK4D,iBAAmB5D,EAAK4D,iBAAiBhD,KAAtBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACxBA,EAAK6D,aAAe7D,EAAK6D,aAAajD,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAVHA,0EAkBR,IAAAsB,EAAAnB,KACTK,IAAE,QAAQe,QAAQ,OAAQ,WACxBD,EAAKvB,MAAMyB,QAAQC,KAAK,2CAIhB,IAAAqC,EAAA3D,KACVK,IAAE,QAAQe,QAAQ,OAAQ,WACxBuC,EAAK/D,MAAMyB,QAAQC,KAAK,KAEpBqC,EAAKrB,MAAMiB,YACbI,EAAK/D,MAAMY,UAAUmD,EAAKrB,MAAMiB,mDAKzBK,GACW,KAAlBA,EAAMC,UAAqC,IAAnBD,EAAME,WAChCF,EAAMG,iBACF/D,KAAKsC,MAAMiB,YACbvD,KAAKQ,sDAKMoD,GACf5D,KAAKgE,SAAS,CACZT,WAAYK,EAAMK,OAAOC,yCAIpB,IAAAC,EAAAnE,KACP,OACEuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,OACAH,EAAAC,EAAAC,cAAA,YACE2C,GAAG,WACH1C,UAAU,uBACV2C,SAAU,SAAAT,GAAK,OAAIO,EAAKV,iBAAiBG,IACzCU,UAAWtE,KAAK0D,aAChBQ,MAAOlE,KAAKsC,MAAMiB,aAEpBhC,EAAAC,EAAAC,cAAA,SAAO8C,QAAQ,YAAf,cAEFhD,EAAAC,EAAAC,cAAA,UACEC,UAAU,oDACVC,QAAS3B,KAAKwD,UAFhB,WAMAjC,EAAAC,EAAAC,cAAA,UACEC,UAAU,mDACVC,QAAS3B,KAAKQ,WAEde,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAb,OAJF,eAtEcI,cA2GPO,cAjBS,SAAAC,GACtB,MAAO,CACLA,UAOuB,SAAAC,GACzB,MAAO,CACL/B,UAAW,SAAA2B,GACTI,EH9GiB,SAAAJ,GAAI,MAAK,CAC9BH,KAAM,WACNG,QG4GazC,CAAQyC,OAKRE,CAGbiB,mBChGakB,0LAbX,OACEjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,KACElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CACEC,OAAK,EACLC,KAAMC,EAAMpF,KACZqF,UAAW,kBAAMvD,EAAAC,EAAAC,cAACsD,EAAD,SAEnBxD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAOE,KAAMC,EAAMnF,QAASoF,UAAWxB,YAT7BxB,cCGZkD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxD,QACfkD,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,kDC/E3DC,EAAY,CAChB,CACEnE,KAAM,cACNC,MAAM,GAER,CACED,KAAM,eACNC,MAAM,GAER,CACED,KAAM,mBACNC,MAAM,IA0BKK,EAtBD,WAA+B,IAA9BH,EAA8BiE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBD,EAAWI,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAO1E,MACf,IAAK,WACH,OAAOlC,OAAA6G,EAAA,EAAA7G,CACFwC,GADLsE,OAAA,CAEE,CACExC,GAAIsC,EAAOtC,GACXjC,KAAMuE,EAAOvE,KACbC,MAAM,KAGZ,IAAK,cACH,OAAOE,EAAMS,IAAI,SAAAC,GAAI,OACnBA,EAAKb,OAASuE,EAAOvE,KAArBrC,OAAA+G,EAAA,EAAA/G,CAAA,GAAiCkD,EAAjC,CAAuCZ,MAAM,IAASY,IAE1D,IAAK,cACH,OAAOV,EAAMwE,OAAO,SAAA9D,GAAI,OAAKA,EAAKZ,OACpC,QACE,OAAOE,IC9BIyE,cAAgB,CAC7BtE,UCAauE,cACbC,EACA/B,OAAOgC,mBAAqBhC,OAAOgC,qBCIrCC,IAASC,OACP7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAUC,MAAOA,GACf/F,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,KACED,EAAAC,EAAAC,cAAC+F,EAAD,QAGJ3G,SAAS4G,eAAe,SJIX,WACb,GAA6C,kBAAmBjC,UAAW,CAGzE,GADkB,IAAIkC,IAAIC,cAAwBzC,OAAOC,UAC3CyC,SAAW1C,OAAOC,SAASyC,OAIvC,OAGF1C,OAAO2C,iBAAiB,OAAQ,WAC9B,IAAMtC,EAAK,GAAAqB,OAAMe,cAAN,sBAEP3C,GAiDV,SAAiCO,GAE/BuC,MAAMvC,GACHI,KAAK,SAAAoC,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3C,UAAUC,cAAc2C,MAAMzC,KAAK,SAAAC,GACjCA,EAAayC,aAAa1C,KAAK,WAC7BT,OAAOC,SAASmD,aAKpBhD,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAoC,CAAwBhD,GAIxBC,UAAUC,cAAc2C,MAAMzC,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MI9BxBiD","file":"static/js/main.b822ec67.chunk.js","sourcesContent":["const paths = {\n  root: '/',\n  addTodo: '/addTodo'\n};\n\nexport default paths;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport $ from 'jquery';\nimport M from 'materialize-css';\nimport './Icons.css';\n\nclass Icons extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onAddTodo = this.onAddTodo.bind(this);\n    this.onClear = this.onClear.bind(this);\n  }\n\n  UNSAFE_componentWillMount = () => {\n    $('body').css('display', 'none');\n    $('body').fadeIn('slow');\n  };\n\n  componentDidMount() {\n    // NOTICE: jQuery is not working in this case..\n    const elements = document.querySelectorAll('.tooltipped');\n    M.Tooltip.init(elements);\n  }\n\n  onClear() {\n    this.props.clearTodos();\n  }\n\n  onAddTodo() {\n    $('body').fadeOut('slow', () => {\n      this.props.history.push('addTodo');\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"icons\">\n        <button\n          className=\"btn-floating btn-large waves-effect waves-light right grey tooltipped\"\n          onClick={this.onClear}\n          data-position=\"top\"\n          data-tooltip=\"Clear all finished Todos\"\n        >\n          <i className=\"material-icons\">clear</i>\n        </button>\n        <button\n          className=\"btn-floating btn-large waves-effect waves-light right red tooltipped\"\n          onClick={this.onAddTodo}\n          data-position=\"top\"\n          data-tooltip=\"Add a new Todo\"\n        >\n          <i className=\"material-icons\">add</i>\n        </button>\n      </div>\n    );\n  }\n}\n\nIcons.propTypes = {\n  history: PropTypes.object,\n  clearTodos: PropTypes.func.isRequired\n};\n\nexport default withRouter(Icons);\n","export const addTodo = name => ({\n  type: 'ADD_TODO',\n  name\n});\n\nexport const finishTodo = name => ({\n  type: 'FINISH_TODO',\n  name\n});\n\nexport const clearTodos = {\n  type: 'CLEAR_TODOS'\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { finishTodo } from '../actions';\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFinishTodo = this.onFinishTodo.bind(this);\n  }\n\n  onFinishTodo() {\n    this.props.onFinishTodo(this.props.name);\n  }\n\n  render() {\n    return (\n      <div className=\"row center valign-wrapper\">\n        <div className={'col s6 ' + (this.props.done ? 'grey-text' : '')}>\n          <h4>\n            {this.props.done ? <s>{this.props.name}</s> : this.props.name}\n          </h4>\n        </div>\n        <div className=\"col s6\">\n          <button\n            className={\n              'btn btn-large waves-effect waves-light ' +\n              (this.props.done ? 'disabled' : '')\n            }\n            type=\"submit\"\n            name=\"action\"\n            onClick={this.onFinishTodo}\n          >\n            Done\n            <i className=\"material-icons right\">flag</i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodo.propTypes = {\n  name: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  onFinishTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFinishTodo: name => {\n      dispatch(finishTodo(name));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icons from './icons/Icons';\nimport Todo from './Todo';\n\nimport { clearTodos } from '../actions';\n\nimport { connect } from 'react-redux';\n\nconst TodoList = ({ todos, onClearTodos }) => {\n  function clearTodos() {\n    onClearTodos();\n  }\n\n  return (\n    <div className=\"container\">\n      {todos\n        .sort((x, y) => (x.done === y.done ? 0 : x.done ? 1 : -1))\n        .map((todo, index) => (\n          <Todo key={index} {...todo} />\n        ))}\n      <Icons clearTodos={clearTodos} />\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      done: PropTypes.bool.isRequired\n    }).isRequired\n  ).isRequired,\n  onClearTodos: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos,\n    clearTodos: clearTodos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClearTodos: () => {\n      dispatch(clearTodos);\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport $ from 'jquery';\nimport './AddTodo.css';\n\nimport { connect } from 'react-redux';\nimport { addTodo } from '../../actions';\n\nclass AddTodo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: ''\n    };\n\n    this.onGoBack = this.onGoBack.bind(this);\n    this.onAddTodo = this.onAddTodo.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n    this.onEnterPress = this.onEnterPress.bind(this);\n  }\n\n  UNSAFE_componentWillMount = () => {\n    $('body').css('display', 'none');\n    $('body').fadeIn('slow');\n  };\n\n  onGoBack() {\n    $('body').fadeOut('slow', () => {\n      this.props.history.push('/');\n    });\n  }\n\n  onAddTodo() {\n    $('body').fadeOut('slow', () => {\n      this.props.history.push('/');\n\n      if (this.state.inputValue) {\n        this.props.onAddTodo(this.state.inputValue);\n      }\n    });\n  }\n\n  onEnterPress(event) {\n    if (event.keyCode === 13 && event.shiftKey === false) {\n      event.preventDefault();\n      if (this.state.inputValue) {\n        this.onAddTodo();\n      }\n    }\n  }\n\n  updateInputValue(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"add-todo container\">\n        <div className=\"input-field\">\n          <i className=\"material-icons prefix\">add</i>\n          <textarea\n            id=\"add-todo\"\n            className=\"materialize-textarea\"\n            onChange={event => this.updateInputValue(event)}\n            onKeyDown={this.onEnterPress}\n            value={this.state.inputValue}\n          />\n          <label htmlFor=\"add-todo\">Todo Name</label>\n        </div>\n        <button\n          className=\"btn btn-large waves-effect waves-light grey right\"\n          onClick={this.onGoBack}\n        >\n          Go Back\n        </button>\n        <button\n          className=\"btn btn-large waves-effect waves-light red right\"\n          onClick={this.onAddTodo}\n        >\n          <i className=\"material-icons left\">add</i>\n          Add\n        </button>\n      </div>\n    );\n  }\n}\n\nAddTodo.propTypes = {\n  history: PropTypes.object,\n  onAddTodo: PropTypes.func.isRequired\n};\n\n// Map the state(data) from the store to props of this component.\n// Logging out the props would give us the todos array.\n// Save props using locally. \nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\n// Mapping dispatch to props. Saving the 'onAddTodo' function to the props\n// that executes the dispatch(addTodo) method in our action.\n// Save methods to props, actions that I want to execute.\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTodo: name => {\n      dispatch(addTodo(name));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddTodo);\n","import React, { Component } from 'react';\nimport Paths from './config/paths';\nimport TodoList from './components/TodoList';\nimport AddTodo from './components/add_todo/AddTodo';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path={Paths.root}\n          component={() => <TodoList />}\n        />\n        <Route path={Paths.addTodo} component={AddTodo} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = [\n  {\n    name: 'Make dinner',\n    done: false\n  },\n  {\n    name: 'Meet friends',\n    done: true\n  },\n  {\n    name: 'Meet with family',\n    done: false\n  }\n];\n\nconst todos = (state = initState, action) => {\n  switch (action.type) {\n  case 'ADD_TODO':\n    return [\n      ...state,\n      {\n        id: action.id,\n        name: action.name,\n        done: false\n      }\n    ];\n  case 'FINISH_TODO':\n    return state.map(todo =>\n      todo.name === action.name ? { ...todo, done: true } : todo\n    );\n  case 'CLEAR_TODOS':\n    return state.filter(todo => !todo.done);\n  default:\n    return state;\n  }\n};\n\nexport default todos;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\n\nexport default combineReducers({\n  todos\n});\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nexport default createStore(\n  reducer,\n  window.devToolsExtension && window.devToolsExtension()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport HashRouter from 'react-router-dom/HashRouter';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}