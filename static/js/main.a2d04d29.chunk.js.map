{"version":3,"sources":["config/paths.js","components/icons/Icons.js","components/Todo.js","components/TodoList.js","components/add_todo/AddTodo.js","actions/index.js","App.js","registerServiceWorker.js","reducers/todos.js","reducers/index.js","store.js","index.js"],"names":["paths","root","addTodo","Icons","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","UNSAFE_componentWillMount","$","css","fadeIn","onAddTodo","bind","assertThisInitialized","_this2","fadeOut","history","push","react_default","a","createElement","className","onClick","Component","withRouter","Todo","_ref","name","done","type","connect","state","todos","sort","x","y","map","todo","index","components_Todo","assign","key","components_icons_Icons","AddTodo","inputValue","onGoBack","updateInputValue","_this3","event","setState","target","value","_this4","id","onChange","htmlFor","dispatch","App","Switch","Route","exact","path","Paths","component","components_TodoList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initState","arguments","length","undefined","action","toConsumableArray","concat","objectSpread","combineReducers","createStore","reducer","ReactDOM","render","es","store","BrowserRouter_default","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a2d04d29.chunk.js","sourcesContent":["const paths = {\n  root: '/',\n  addTodo: '/addTodo'\n};\n\nexport default paths;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport $ from 'jquery';\nimport './Icons.css';\n\nclass Icons extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onAddTodo = this.onAddTodo.bind(this);\n  }\n\n  UNSAFE_componentWillMount = () => {\n    $('body').css('display', 'none');\n    $('body').fadeIn('slow');\n  };\n\n  onAddTodo() {\n    $('body').fadeOut('slow', () => {\n      this.props.history.push('addTodo');\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"icons\">\n        <button className=\"btn-floating btn-large waves-effect waves-light right grey\">\n          <i className=\"material-icons\">clear</i>\n        </button>\n        <button\n          className=\"btn-floating btn-large waves-effect waves-light right red\"\n          onClick={this.onAddTodo}\n        >\n          <i className=\"material-icons\">add</i>\n        </button>\n      </div>\n    );\n  }\n}\n\nIcons.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(Icons);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ name, done }) => {\n  return (\n    <div className=\"row center valign-wrapper\">\n      <div className={'col s6 ' + (done ? 'grey-text' : '')}>\n        <h4>{done ? <s>{name}</s> : name}</h4>\n      </div>\n      <div className=\"col s6\">\n        <button\n          className={\n            'btn btn-large waves-effect waves-light ' + (done ? 'disabled' : '')\n          }\n          type=\"submit\"\n          name=\"action\"\n        >\n          Done\n          <i className=\"material-icons right\">flag</i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nTodo.propTypes = {\n  name: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icons from './icons/Icons';\nimport Todo from './Todo';\n\nimport { connect } from 'react-redux';\n\nconst TodoList = ({ todos }) => {\n  return (\n    <div className=\"container\">\n      {todos\n        .sort((x, y) => (x.done === y.done ? 0 : x.done ? 1 : -1))\n        .map((todo, index) => (\n          <Todo key={index} {...todo} />\n        ))}\n      <Icons />\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      done: PropTypes.bool.isRequired\n    }).isRequired\n  ).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  };\n};\n\nexport default connect(mapStateToProps)(TodoList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport $ from 'jquery';\nimport './AddTodo.css';\n\nimport { connect } from 'react-redux';\nimport { addTodo } from '../../actions';\n\nclass AddTodo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: ''\n    };\n\n    this.onGoBack = this.onGoBack.bind(this);\n    this.onAddTodo = this.onAddTodo.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n  }\n\n  UNSAFE_componentWillMount = () => {\n    $('body').css('display', 'none');\n    $('body').fadeIn('slow');\n  };\n\n  onGoBack() {\n    $('body').fadeOut('slow', () => {\n      this.props.history.push('/');\n    });\n  }\n\n  onAddTodo() {\n    $('body').fadeOut('slow', () => {\n      this.props.history.push('/');\n\n      if (this.state.inputValue) {\n        this.props.onAddTodo(this.state.inputValue);\n      }\n    });\n  }\n\n  updateInputValue(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"add-todo container\">\n        <div className=\"input-field\">\n          <i className=\"material-icons prefix\">add</i>\n          <textarea\n            id=\"add-todo\"\n            className=\"materialize-textarea\"\n            onChange={event => this.updateInputValue(event)}\n            value={this.state.inputValue}\n          />\n          <label htmlFor=\"add-todo\">Todo Name</label>\n        </div>\n        <button\n          className=\"btn btn-large waves-effect waves-light grey right\"\n          onClick={this.onGoBack}\n        >\n          Go Back\n        </button>\n        <button\n          className=\"btn btn-large waves-effect waves-light red right\"\n          onClick={this.onAddTodo}\n        >\n          <i className=\"material-icons left\">add</i>\n          Add\n        </button>\n      </div>\n    );\n  }\n}\n\nAddTodo.propTypes = {\n  history: PropTypes.object,\n  onAddTodo: PropTypes.func.isRequired\n};\n\n// Map the state(data) from the store to props of this component.\n// Logging out the props would give us the todos array.\n// Save props using locally. \nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\n// Mapping dispatch to props. Saving the 'onAddTodo' function to the props\n// that executes the dispatch(addTodo) method in our action.\n// Save methods to props, actions that I want to execute.\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTodo: name => {\n      dispatch(addTodo(name));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddTodo);\n","export const addTodo = name => ({\n  type: 'ADD_TODO',\n  name\n});\n\nexport const finishTodo = id => ({\n  type: 'FINISH_TODO',\n  id\n});\n","import React, { Component } from 'react';\nimport Paths from './config/paths';\nimport TodoList from './components/TodoList';\nimport AddTodo from './components/add_todo/AddTodo';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path={Paths.root}\n          component={() => <TodoList />}\n        />\n        <Route path={Paths.addTodo} component={AddTodo} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = [\n  {\n    name: 'Make dinner',\n    done: false\n  },\n  {\n    name: 'Meet friends',\n    done: true\n  },\n  {\n    name: 'Meet with family',\n    done: false\n  }\n];\n\nconst todos = (state = initState, action) => {\n  switch (action.type) {\n  case 'ADD_TODO':\n    return [\n      ...state,\n      {\n        id: action.id,\n        name: action.name,\n        done: false\n      }\n    ];\n  case 'FINISH_TODO':\n    return state.map(\n      todo => (todo.id === action.id ? { ...todo, done: true } : todo)\n    );\n  default:\n    return state;\n  }\n};\n\nexport default todos;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\n\nexport default combineReducers({\n  todos\n});\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nexport default createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}